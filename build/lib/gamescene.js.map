{"version":3,"sources":["../../lib/gamescene.js"],"names":[],"mappings":"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","file":"gamescene.js","sourcesContent":["\"use strict\"\n\nvar gameMeta = require('./gamemeta.js');\nvar Player = require('./player.js');\n\nvar TICKRATE = 15;\nvar SNAPSHOTS = 30;\n\nif (CLIENT) {\n  SNAPSHOTS = 10;\n}\n\nclass GameScene extends THREE.Scene {\n  constructor() {\n    super();\n\n    global.game = this;\n\n    this.entityIdCount = 0;\n    this.entityMap = {}; // entityId -> entityObject\n\n    this.startTime = 0;\n    this.currentTick = 0;\n    this.offsetTick = 0;\n\n    this.snapshots = [];\n    this.snapshotMap = {}; // optimization\n\n    this.autoUpdate = false\n\n    /* Start ticking on the server! */\n    if (SERVER) {\n\n      // todo: replace this with a more accurate interval function\n      this.startTime = (new Date()).getTime();\n      this.currentTick = 0;\n      this.lastTick = this.currentTick;\n      var interval = () => {\n\n        this.currentTick = this.calculateTick();\n        var _oldTick = this.currentTick;\n\n        if (this.currentTick != this.lastTick) {\n\n          // console.log(this.currentTick);\n          // console.log((new Date()).getTime());\n\n          var _currentTick = this.currentTick;\n\n          this.replaySnapshots();\n\n          var c = 0;\n          for (var i = this.lastTick+1; i <= _currentTick; i++) {\n            c++;\n            if (c > 10) return;\n\n            this.currentTick = i;\n\n            this.update(TICKRATE / 1000);\n            this.pushSnapshot();\n\n            if (i % 10 == 0) {\n              primus.write({\n                type: 'tick',\n                tick: i,\n                snapshot: this.snapshots[this.snapshots.length-1]\n              });\n            }\n          }\n\n        }\n\n        this.lastTick = _oldTick;\n\n        setImmediate(interval);\n      }\n      interval();\n\n      // Someone has connected! Give them a player entity.\n      network.addEventListener('connection', (event) => {\n        var playerId = this.getNewId();\n        var player = new Player();\n        this.addEntId(player, playerId)\n\n        event.spark.entId = playerId;\n        event.spark.write({type: 'possess', entId: playerId});\n        event.spark.write({type: 'initialTick', startTime: this.startTime, realTimeStamp: (new Date()).getTime()});\n\n        delete this.snapshots;\n        delete this.snapshotMap;\n\n        this.snapshots = [];\n        this.snapshotMap = {};\n      });\n\n      network.addEventListener('disconnection', (event) => {\n        var entity = this.findEntityById(event.spark.entId);\n        if (entity) {\n          this.remove(entity);\n        }\n      });\n\n      // network.addEventListener('syncTick1', (event) => {\n      //   event.spark.write({type: 'syncTick1', realTimeStamp: (new Date()).getTime(), tick: this.currentTick});\n      // });\n\n      network.addEventListener('usersnapshot', (event) => {\n\n        for (var i in event.snapshots) {\n          var snapshot = event.snapshots[i];\n\n          if (this.snapshotMap[snapshot.timestamp] &&\n              event.spark.entId &&\n              this.snapshotMap[snapshot.timestamp].entities[event.spark.entId] &&\n              this.snapshotMap[snapshot.timestamp].entities[event.spark.entId].vars\n          ) {\n            this.snapshotMap[snapshot.timestamp].entities[event.spark.entId].vars.move = snapshot.move;\n          }\n        }\n      \n      });\n\n      // network.addEventListener('usermove', (event) => {\n      //   if (this.snapshotMap[event.tick] &&\n      //       event.spark.entId &&\n      //       this.snapshotMap[event.tick].entities[event.spark.entId] &&\n      //       this.snapshotMap[event.tick].entities[event.spark.entId].vars\n      //   ) {\n      //     this.snapshotMap[event.tick].entities[event.spark.entId].vars.move = event.move;\n      //   } else {\n      //     try {\n      //       this.snapshotMap[this.snapshotMap.length-1].entities[event.spark.entId].vars.move = event.move;\n      //     } catch (e) {}\n      //   }\n      // });\n    }\n\n    if (CLIENT) {\n\n      this.lastSnapshotTimestamp = 0;\n\n      // Possess a local player!\n      network.addEventListener('possess', (event) => {\n        var entity = this.findEntityById(event.entId);\n        if (!entity) {\n          entity = new Player();\n          this.addEntId(entity, event.entId)\n        }\n\n        entity.entId = event.entId;\n        global.localPlayer = entity;\n      })\n\n      // network.addEventListener('syncTick1', (event) => {\n        // this.startTime = (new Date()).getTime();\n        // this.offsetTick = event.tick + this.calculateTick();\n      // });\n\n      network.addEventListener('initialTick', (event) => {\n        // this.firstTimeStamp = (new Date()).getTime();\n        // primus.write({type: 'syncTick1'});\n\n        this.startTime = event.startTime;\n        // this.startTime = (new Date()).getTime();\n        this.currentTick = this.calculateTick();\n        this.lastTick = this.currentTick;\n        var interval = () => {\n\n          this.currentTick = this.calculateTick();\n          var _oldTick = this.currentTick;\n\n          if (this.currentTick != this.lastTick) {\n\n            var _currentTick = this.currentTick;\n\n            this.replayUser(this.lastSnapshot);\n\n            var c = 0;\n            for (var i = this.lastTick+1; i <= _currentTick; i++) {\n              c++;\n              if (c > 10) return;\n\n              this.currentTick = i\n\n              this.update(TICKRATE / 1000);\n\n              this.pushSnapshot();\n\n              if (global.localPlayer) {\n                // console.log(localPlayer.localMove);\n                // primus.write({type: 'usermove', tick: this.currentTick, move: localPlayer.localMove});\n              }\n\n              if (i % 2 == 0) {\n                primus.write({type: 'usersnapshot', snapshots: this.snapshots});\n              }\n\n            }\n          }\n\n          this.lastTick = _oldTick;\n\n          requestAnimationFrame(interval);\n        };\n        interval();\n      });\n\n      network.addEventListener('tick', (event) => {\n        if (event.snapshot.timestamp > this.lastSnapshotTimestamp) {\n          this.lastSnapshot = event.snapshot;\n          this.lastSnapshotTimestamp = event.snapshot.timestamp;\n        }\n      });\n\n    }\n\n    // Create static elements!\n    var geometry = new THREE.BoxGeometry( 5, 5, 0.1 );\n    var material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );\n    if (CLIENT) {\n      var texture = new THREE.TextureLoader().load( \"danny.jpg\" );\n      texture.minFilter = THREE.NearestFilter;\n      texture.magFilter = THREE.NearestFilter;\n      material.map = texture;\n    }\n    var cube = new THREE.Mesh( geometry, material );\n    cube.position.z = 0;\n    this.add( cube );\n  }\n\n  pushSnapshot() {\n    var snapshot;\n\n    if (SERVER) {\n      snapshot = this.serialize(true);\n    } else if (global.localPlayer) {\n      snapshot = {timestamp: this.currentTick, move: JSON.parse(JSON.stringify(localPlayer.localMove))};\n    }\n\n    this.snapshots.push(snapshot);\n    this.snapshotMap[snapshot.timestamp] = snapshot;\n\n    // automatically pop old snapshots\n    if (this.snapshots.length > SNAPSHOTS) {\n      var oldSnapshot = this.snapshots.shift();\n      delete this.snapshotMap[oldSnapshot.timestamp];\n    }\n  }\n\n  getNewId() {\n    return ++this.entityIdCount;\n  }\n\n  findEntityById(id) {\n    return this.entityMap[id];\n  }\n\n  serialize(ignoreMove) {\n    var serial = {\n      timestamp: this.currentTick,\n      entities: {}\n    };\n\n    this.traverse((entity) => {\n      if (entity.entId && entity.dynamic) {\n        var pos = {x: entity.position.x, y: entity.position.y, z: entity.position.z}\n        var rot = {x: entity.rotation.x, y: entity.rotation.y, z: entity.rotation.z}\n        serial.entities[entity.entId] = {\n          className: entity.className,\n          vars: JSON.parse(JSON.stringify(entity.syncedVars)), // deep copy\n          pos: pos,\n          rot: rot\n        };\n      }\n    })\n\n    return serial;\n  }\n\n  applySnapshot(snapshot, ignorePosition) {\n    var oldSnapshot = this.serialize();\n\n    // updated\n    for (var i in snapshot.entities) {\n      var serial = snapshot.entities[i];\n      var entity = this.entityMap[i];\n      // add entity\n      if (!entity) {\n        entity = gameMeta.createClass(serial.className);\n        this.addEntId(entity, i);\n      }\n\n      if (!ignorePosition) {\n        entity.position.set(serial.pos.x, serial.pos.y, serial.pos.z);\n        entity.rotation.set(serial.rot.x, serial.rot.y, serial.rot.z);\n      }\n      delete entity.syncedVars;\n      entity.syncedVars = JSON.parse(JSON.stringify(serial.vars));\n    }\n\n    // deleted\n    for (var i in oldSnapshot.entities) {\n      if (!snapshot.entities[i]) {\n        this.removeById(i);\n      }\n    }\n  }\n\n  // client\n  replayUser(snapshot) {\n    if (!snapshot) return;\n\n    this.applySnapshot(snapshot);\n\n    if (this.snapshots.length == 0) return;\n\n    if (!global.localPlayer) return;\n\n    var _currentTick = this.currentTick;\n    var _localMove = localPlayer.localMove;\n\n    for (var i = snapshot.timestamp; i < _currentTick; i++) {\n\n      this.currentTick = i;\n\n      if (this.snapshotMap[i]) {\n        localPlayer.localMove = this.snapshotMap[i].move;\n      }\n\n      this.update(TICKRATE/1000);\n\n    }\n\n    this.updateMatrixWorld();\n\n    localPlayer.localMove = _localMove;\n    this.currentTick = _currentTick;\n  }\n\n  // server\n  replaySnapshots() {\n    if (this.snapshots.length == 0) return;\n\n    this.applySnapshot(this.snapshots[0]);\n\n    var _currentTick = this.currentTick;\n\n    // replay all user input\n    for (var i = 1; i < this.snapshots.length; i++) {\n      this.currentTick = this.snapshots[i].timestamp;\n\n      this.applySnapshot(this.snapshots[i], true);\n      this.update(TICKRATE/1000);\n\n      delete this.snapshotMap[this.snapshots[i].timestamp];\n      delete this.snapshots[i];\n      var newSnapshot = this.serialize();\n      this.snapshots[i] = newSnapshot;\n      this.snapshotMap[this.snapshots[i].timestamp] = newSnapshot;\n    }\n\n    this.currentTick = _currentTick;\n\n  }\n\n  update(delta) {\n    this.traverse((entity) => {\n      if (entity.dynamic && entity.update) {\n        entity.update(delta);\n      }\n    })\n\n    if (CLIENT && global.localPlayer) {\n\n      var offset = new THREE.Vector3(0, -3, 3);\n      var pos = global.localPlayer.position.clone();\n      pos.add(offset);\n      global.camera.position.copy(pos);\n\n    }\n\n    this.updateMatrix();\n    this.updateMatrixWorld( true );\n  }\n\n  addEntId(obj, entId) {\n    obj.entId = entId;\n    this.entityMap[entId] = obj;\n    this.add(obj);\n  }\n\n  removeById(id) {\n    var obj = this.findEntityById(id);\n    this.entityMap[obj.entId] = null;\n\n    if (obj) {\n      this.remove(obj);\n    }\n  }\n\n  calculateTick() {\n    if (SERVER) {\n      return Math.floor(((new Date()).getTime() - this.startTime) / TICKRATE) + this.offsetTick;\n    } else {\n      return Math.floor((ts.now() - this.startTime) / TICKRATE) + this.offsetTick;\n    }\n  }\n}\n\nmodule.exports = GameScene;\n"]}