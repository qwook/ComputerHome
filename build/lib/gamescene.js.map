{"version":3,"sources":["../../lib/gamescene.js"],"names":[],"mappings":"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","file":"gamescene.js","sourcesContent":["\"use strict\"\n\nvar gameMeta = require('./gamemeta.js');\nvar Player = require('./player.js');\n\nvar TICKRATE = 10;\nvar SNAPSHOTS = 150;\n\nclass GameScene extends THREE.Scene {\n  constructor() {\n    super();\n\n    global.game = this;\n\n    this.entityIdCount = 0;\n    this.entityMap = {}; // entityId -> entityObject\n\n    this.currentTick = 0;\n\n    this.snapshots = [];\n    this.snapshotMap = {}; // optimization\n\n    this.autoUpdate = false\n\n    /* Start ticking on the server! */\n    if (SERVER) {\n\n      // todo: replace this with a more accurate interval function\n      this.startTime = (new Date()).getTime();\n      this.currentTick = 0;\n      this.lastTick = this.currentTick;\n      var interval = () => {\n\n        this.currentTick = Math.floor(((new Date()).getTime() - this.startTime) / TICKRATE);\n\n        if (this.currentTick != this.lastTick) {\n          this.replaySnapshots();\n\n          var _currentTick = this.currentTick;\n          for (var i = this.lastTick+1; i <= _currentTick; i++) {\n            this.currentTick = i;\n            this.update(TICKRATE / 1000);\n            this.pushSnapshot();\n          }\n\n          primus.write({\n            type: 'tick',\n            tick: this.currentTick,\n            snapshot: this.snapshots[this.snapshots.length-1]\n          });\n        }\n\n        this.lastTick = this.currentTick;\n\n      }\n      setInterval(interval, 1);\n\n      // Someone has connected! Give them a player entity.\n      network.addEventListener('connection', (event) => {\n        var playerId = this.getNewId();\n        var player = new Player();\n        this.addEntId(player, playerId)\n\n        event.spark.entId = playerId;\n        event.spark.write({type: 'possess', entId: playerId});\n        event.spark.write({type: 'initialTick', startTime: this.startTime});\n\n        delete this.snapshots;\n        delete this.snapshotMap;\n\n        this.snapshots = [];\n        this.snapshotMap = {};\n      })\n\n      network.addEventListener('disconnection', (event) => {\n        var entity = this.findEntityById(event.spark.entId);\n        if (entity) {\n          this.remove(entity);\n        }\n      });\n\n      network.addEventListener('usermove', (event) => {\n        if (this.snapshotMap[event.tick] &&\n            event.spark.entId &&\n            this.snapshotMap[event.tick].entities[event.spark.entId] &&\n            this.snapshotMap[event.tick].entities[event.spark.entId].vars\n        ) {\n          this.snapshotMap[event.tick].entities[event.spark.entId].vars.move = JSON.parse(JSON.stringify(event.move));\n        }\n      });\n    }\n\n    if (CLIENT) {\n\n      // Possess a local player!\n      network.addEventListener('possess', (event) => {\n        var entity = this.findEntityById(event.entId);\n        if (!entity) {\n          entity = new Player();\n          this.addEntId(entity, event.entId)\n        }\n\n        entity.entId = event.entId;\n        global.localPlayer = entity;\n      })\n\n      network.addEventListener('initialTick', (event) => {\n        this.startTime = event.startTime;\n        this.currentTick = Math.floor(((new Date()).getTime() - event.startTime) / TICKRATE) - 3;\n        this.lastTick = this.currentTick;\n        var interval = () => {\n\n          this.currentTick = Math.floor(((new Date()).getTime() - event.startTime) / TICKRATE) - 3;\n          if (this.currentTick != this.lastTick) {\n            var _currentTick = this.currentTick;\n            for (var i = this.lastTick+1; i <= _currentTick; i++) {\n              this.currentTick = i\n              this.update(TICKRATE / 1000);\n            }\n          }\n\n          this.lastTick = this.currentTick;\n\n          requestAnimationFrame(interval);\n        };\n        interval();\n      });\n\n      network.addEventListener('tick', (event) => {\n        this.applySnapshot(event.snapshot);\n      });\n\n    }\n\n    // Create static elements!\n    var geometry = new THREE.BoxGeometry( 5, 5, 0.1 );\n    var material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );\n    var cube = new THREE.Mesh( geometry, material );\n    cube.position.z = 0;\n    this.add( cube );\n  }\n\n  pushSnapshot() {\n    var snapshot = this.serialize(true);\n    this.snapshots.push(snapshot);\n    this.snapshotMap[snapshot.timestamp] = snapshot;\n\n    // automatically pop old snapshots\n    if (this.snapshots.length > SNAPSHOTS) {\n      var oldSnapshot = this.snapshots.shift();\n      delete this.snapshotMap[oldSnapshot.timestamp];\n    }\n  }\n\n  getNewId() {\n    return ++this.entityIdCount;\n  }\n\n  findEntityById(id) {\n    return this.entityMap[id];\n  }\n\n  serialize(ignoreMove) {\n    var serial = {\n      timestamp: this.currentTick,\n      entities: {}\n    };\n\n    this.traverse((entity) => {\n      if (entity.entId && entity.dynamic) {\n        var pos = {x: entity.position.x, y: entity.position.y, z: entity.position.z}\n        var rot = {x: entity.rotation.x, y: entity.rotation.y, z: entity.rotation.z}\n        serial.entities[entity.entId] = {\n          className: entity.className,\n          vars: JSON.parse(JSON.stringify(entity.syncedVars)), // deep copy\n          pos: pos,\n          rot: rot\n        };\n      }\n    })\n\n    return serial;\n  }\n\n  applySnapshot(snapshot, ignorePosition) {\n    var oldSnapshot = this.serialize();\n\n    // updated\n    for (var i in snapshot.entities) {\n      var serial = snapshot.entities[i];\n      var entity = this.entityMap[i];\n      // add entity\n      if (!entity) {\n        entity = gameMeta.createClass(serial.className);\n        this.addEntId(entity, i);\n      }\n\n      if (!ignorePosition) {\n        entity.position.set(serial.pos.x, serial.pos.y, serial.pos.z);\n        entity.rotation.set(serial.rot.x, serial.rot.y, serial.rot.z);\n      }\n      delete entity.syncedVars;\n      entity.syncedVars = JSON.parse(JSON.stringify(serial.vars));\n    }\n\n    // deleted\n    for (var i in oldSnapshot.entities) {\n      if (!snapshot.entities[i]) {\n        this.removeById(i);\n      }\n    }\n  }\n\n  // client\n  replayUser() {\n\n  }\n\n  // server\n  replaySnapshots() {\n    if (this.snapshots.length == 0) return;\n\n    this.applySnapshot(this.snapshots[0]);\n\n    var _currentTick = this.currentTick;\n\n    // replay all user input\n    for (var i = 1; i < this.snapshots.length; i++) {\n      this.currentTick = this.snapshots[i].timestamp;\n\n      this.applySnapshot(this.snapshots[i], true);\n      this.update(TICKRATE/1000);\n\n      delete this.snapshotMap[this.snapshots[i].timestamp];\n      delete this.snapshots[i];\n      var newSnapshot = this.serialize();\n      this.snapshots[i] = newSnapshot;\n      this.snapshotMap[this.snapshots[i].timestamp] = newSnapshot;\n    }\n\n    this.currentTick = _currentTick;\n\n  }\n\n  update(delta) {\n    this.traverse((entity) => {\n      if (entity.dynamic && entity.update) {\n        entity.update(delta);\n      }\n    })\n\n    this.updateMatrix();\n    this.updateMatrixWorld( true );\n  }\n\n  addEntId(obj, entId) {\n    obj.entId = entId;\n    this.entityMap[entId] = obj;\n    this.add(obj);\n  }\n\n  removeById(id) {\n    var obj = this.findEntityById(id);\n    this.entityMap[obj.entId] = null;\n\n    if (obj) {\n      this.remove(obj);\n    }\n  }\n}\n\nmodule.exports = GameScene;\n"]}